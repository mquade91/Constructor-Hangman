Was able to randomly generate a word and compare it to the users input.

I do not understand how to break the word down and then compare it to the users input the pseudo below is from class



New game
* Set number of guesses remaining to 10
* Randomly pick a word from array of choices
* Ask user to pick first letter

Confirm New Game
* Ask if they want to play again
* If yes,
  * New game
* Else
  * Exit

Guess Letter
* If guesses > 0
  * Ask the user to guess a letter
  * Expose letter in currentWord, if used
  * If word is completely exposed:
    * Tell user they win!
    * Confirm new game
  * Else
    * Decrement guesses by 1
    * Guess Letter
* Else
  * Confirm new game

==============
var Letter = require("./Letter");

function Word(value) {
  this.letters = [];

  for (var l = 0; l < value.length; l++) {
    this.letters.push(new Letter(value[l]));
  }

  this.exposeLetter = function(letter) {
      for (var i = 0; i < this.letters.length; i++) {
          this.letters[i].exposeIfMatches(letter);
      }
  };
  
  this.isExposed = function() {
      for (var i = 0; i < this.letters.length; i++) {
          if (!this.letters[i].exposed) {
            return false;
          }
      }
      return true;
  }
}

=====================
function Letter(character) {
    this.exposed = false;
    this.character = character;
    
    this.exposeIfMatches = function(letter) {
        if (this.character === letter) {
            this.exposed = true;
        }
    }
}

module.exports = Letter;

====================
var Word = require("./Word");

var wordChoices = [
    "apple",
    "banana"
];
var currentWord;
var numGuesses;

function guessLetter() {
    if (numGuesses > 0) {
        inquirer.prompt([
            {
                "message": "Guess a letter:",
                "name": "letter"
            }
        ])
        .then(function(userInput) {
            currentWord.exposeLetter(userInput.letter);
            if (currentWord.isExposed()) {
                // user won
                // confirm next game
            } else {
                numGuesses--;
                guessLetter();
            }
        })
    } else {
        // ask user if they want to play again
        // if yes, new game
    }
}

function newGame() {
    numGuesses = 10;
    currentWord = new Word(wordChoices[0]);
    guessLetter();
}

newGame();

Hangman  command-line game

recieve user input using the inquirer function or prompt NPM packages

Word constructor{current word user is attempting to guess}
how do i make this an object???

var words = ["monitor", "program", "application", "keyboard", "javascript", "gaming", "network"];

var word = words[Math.floor(Math.random() * words.length)];

console.log(word);


word constructor- creating random word
 -need to send to letter constructor??
   -variable in letter constructor that refers to word from wordcontructor





letter constructor{each letter in the current word}
 -display either underlying character or blank placeholder(_)
    -this depends on if user has guessed letter (letter specific logic and data?)
    


keep track of user's remaining guesses 
if letterguessed != [letter from the Word Constructor array]{
 userGuess--;
 }
 
 
 
 Each constructor function needs to be in own file 
---------------------------------------------------------------------------------------------------
 
 // New game
 
 Word
  -1...n:Letters
  -exposedLetter(letter)
  -isExposed()
  
  function Word(value){
   for (var l = 0; l < value.length; l++){
     this.letters.push(new Letter(value[l]));
  
  }
  this.letters = [];
  
  }
 //initialize function array
  
  this.exposeLetter = function(letter){
    for (var=i; i < this.letters.length; i++){
    this.letters[i].exposeIfMatches(letter);
    }
  };
  
  this.isExposed = function(){
    var result = true;
    
    for (var i = 0; i <thisletters.length; i++){
     
      if(!this.letters[i].Exposed){
        return false;
      }
      return result;
     }
   }
  
  
Letter 
-character
-exposeIfMatches(letter)

function Letter(character) {
    this.exposed = false;
    this.character = character;
    
    this.exposeIfMatches = function(letter){
       if(this.character === letter){
         this.exposed = true;
       }
    }
}
 
 
 *set numberr of guesses remaining to 10
 *Randomly pick a word from array of choices
 
Confirm New Game
-Ask if they want to play again
 -If yes,
  -New Game
 -else 
   -exit 
 
var numGuesses;
var wordChoices = [
    "javascript",
    "java",
    "Ruby",
    "PHP"
    ];
var 


function newGame() {
    guesses = 10;
    // randomly pick a word
    // currentWord
    guessLetter();
}

function guessLetter() {
    if (guesses > 0) {
        // ask user to guess
        guesses --;
        guessLetter();
    } else {
        *ask user if they want to play again
        *if yes, new game
    }
}

function guessLetter(){
inquirer.prompt([
 {
  "message": "Guess a Letter"
  "name":"Letter"
}
.then(function(userInput.letter);

// If guesses > 0
    -ask the user to guess a letter
    -Expose letter in currentWord, if used
   If word is completely exposed:
      -Tell user they win!
      -confirm new game
    *Else
       *Decrement guesses by 1
    // *Guess Letter
 Else
    *"do you want to play again? (y/n)"
      *If yes:
        * new game
    *Else
        *do nothing (i.e. quit)



letter constructor 
